<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="7" total="8" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="84" started-at="2017-07-03T05:56:34Z" finished-at="2017-07-03T05:56:34Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="84" started-at="2017-07-03T05:56:34Z" finished-at="2017-07-03T05:56:34Z">
      <class name="com.qainfotech.tap.training.snl.api.BoardTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@100fc185]" name="beforeClass" is-config="true" duration-ms="7" started-at="2017-07-03T11:26:34Z" finished-at="2017-07-03T11:26:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@100fc185]" name="beforeMethod" is-config="true" duration-ms="28" started-at="2017-07-03T11:26:34Z" finished-at="2017-07-03T11:26:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="InvalidTurnException()[pri:0, instance:com.qainfotech.tap.training.snl.api.BoardTest@100fc185]" name="InvalidTurnException" duration-ms="25" started-at="2017-07-03T11:26:34Z" finished-at="2017-07-03T11:26:34Z">
          <exception class="com.qainfotech.tap.training.snl.api.InvalidTurnException">
            <message>
              <![CDATA[Player 'c06bfb6f-d31c-4464-a608-7e44484a661f' does not have the turn]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.qainfotech.tap.training.snl.api.InvalidTurnException: Player 'c06bfb6f-d31c-4464-a608-7e44484a661f' does not have the turn
	at com.qainfotech.tap.training.snl.api.Board.rollDice(Board.java:166)
	at com.qainfotech.tap.training.snl.api.BoardTest.InvalidTurnException(BoardTest.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- com.qainfotech.tap.training.snl.api.InvalidTurnException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidTurnException -->
      </class> <!-- com.qainfotech.tap.training.snl.api.BoardTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
